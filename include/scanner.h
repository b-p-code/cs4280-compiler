// CS4280 Bryce Paubel P1 9/19/22
// Header file for scanner
// Contains the FSA table to drive
// the actual scanner

#ifndef SCANNER_H
#define SCANNER_H

#include <string>
#include <vector>
#include <ctype.h>
#include <iostream>

#include "token.h"

#include "compilerException.h"

class Scanner {
    private:
        std::string lines;
        int linePos;
        int lineCharPos;
        int charPos;

        // Edge case booleans
        bool onlyComments;
        bool reachedEOF;

        // Error values
        int errorState;
        int errorLinePos;
        int errorCharPos;
        char errorChar;

        /***** TABLE INFORMATION *****/
        /* COMMENTS ARE HANDLED IN THE TABLE USING A UNIQUE CODE (2000) */
        
        /***** ROWS *****/
        // Row 1, state 1 (starting state)
        // Row 2, state 2 (identifier)
        // Row 3, state 3 (integer)
        // Row 4, state 4 (=)
        // Row 5, state 5 (==)
        // Row 6, state 6 (comments, special exit code, 2000)
        // Row 7, state 7 (<)
        // Row 8, state 8 (>)
        // Row 9, state 9 (!)
        // Row 10, state 10 (recieving '=' after '!')
        // Row 11: state 11 (:)
        // Row 12: state 12 (recieving '=' after ':')
        // Row 13: state 13 (+)
        // Row 14: state 14 (-)
        // Row 15: state 15 (*)
        // Row 16: state 16 (/)
        // Row 17: state 17 (^)
        // Row 18: state 18 (.)
        // Row 19: state 19 ('(')
        // Row 20: state 20 (')')
        // Row 21: state 21 (,)
        // Row 22, state 22 ({)
        // Row 23, state 23 (})
        // Row 24, state 24 (;)
        // Row 25, state 25 ([)
        // Row 26, state 26 (])
        // Row 27, state 27 (one '|')
        // Row 28, state 28 (two '|'s, ||)
        // Row 29, state 29 (one '&')
        // Row 30, state 30 (two '&'s, &&)

        /***** COLUMNS *****/
        // Column 1: Letter
        // Column 2: Digit
        // Column 3: EOF
        // Column 4: = 
        // Column 5: <
        // Column 6: >
        // Column 7: !
        // Column 8: :
        // Column 9: +
        // Column 10: - 
        // Column 11: * 
        // Column 12: /
        // Column 13: ^
        // Column 14: .
        // Column 15: (
        // Column 16: )
        // Column 17: ,
        // Column 18: {
        // Column 19: }
        // Column 20: ;
        // Column 21: [
        // Column 22: ]
        // Column 23: |
        // Column 24: &
        // Column 25: _
        // Column 26: WS
        // Column 27: Comment, # 
        // Column 28: Other

        static const int STATE_DIMENSION_X = 30;
        static const int STATE_DIMENSION_Y = 28;
        const int STATE_TRANSITIONS[STATE_DIMENSION_X][STATE_DIMENSION_Y] = {
            {    1,    2, 1025,    3,    6,    7,    8,   10,   12,   13,   14,   15,   16,   17,   18,   19,   20,   21,   22,   23,   24,   25,   26,   28,    1,    0,    5,   -2},
            {    1,    1, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,   -2},
            { 1001,    2, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,   -2},
            { 1002, 1002, 1002,    4, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,   -2},
            { 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,   -2},
            {    5,    5,   -3,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5, 2000,    5},
            { 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003,   -2},
            { 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,   -2},
            {   -4,   -4,   -4,    9,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -2},
            { 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006,   -2},
            { 1007, 1007, 1007,   11, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007,   -2},
            { 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,   -2},
            { 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009,   -2},
            { 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010,   -2},
            { 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,   -2},
            { 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012,   -2},
            { 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013,   -2},
            { 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,   -2},
            { 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015,   -2},
            { 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016,   -2},
            { 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017,   -2},
            { 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,   -2},
            { 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,   -2},
            { 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020,   -2},
            { 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021,   -2},
            { 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,   -2},
            {   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   27,   -5,   -5,   -5,   -5,   -2},
            { 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023,   -2},
            {   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   29,   -6,   -6,   -6,   -2},
            { 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,   -2}
        };

        /* Helper functions for the scanner class */
        int column(char);
        std::string error(int, char, int, int);
        
    public:
        Scanner(std::string lines) {
            this->lines = lines;
            this->linePos = 0;
            this->charPos = 0;
            this->lineCharPos = 0;

            // Edge case booleans
            this->reachedEOF = false;
            this->onlyComments = true;

            // Error values
            this->errorState = 0;
            this->errorLinePos = 0;
            this->errorCharPos = 0;
            this->errorChar = 0;
        }
        Token* nextToken();
};

// Help for these exceptions was found here:
// https://www.geeksforgeeks.org/user-defined-custom-exception-with-class-in-c/
// https://stackoverflow.com/questions/2512931/catch-multiple-custom-exceptions-c

// Exception class
class ScannerException : public CompilerException {
    public:
        Token* tk = nullptr; // Token which caused the error

        ScannerException(Token* tk, std::string message) {
            this->tk = tk;
            this->message = message;
        }
        ~ScannerException() {
            if (this->tk) {
                delete this->tk;
            }
        }
};

#endif